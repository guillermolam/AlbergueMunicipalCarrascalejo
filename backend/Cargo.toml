[workspace]
members = [
    "shared",
    "booking-service",
    "notification-service",
    "reviews-service",
    "security-service",
    "validation-service",
    "info-on-arrival-service",
    "location-service",
    "rate-limiter-service",
    "auth-service"
]

[workspace.dependencies]
anyhow = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
tokio = { version = "1.0", features = ["full"] }
futures = "0.3"
spin-sdk = "2.1"
wit-bindgen = "0.25"
http = "1.1"
sqlx = { version = "0.7", features = ["postgres", "chrono", "uuid"] }
thiserror = "1.0"

[profile.release]
opt-level = "s"
lto = true
codegen-units = 1

# Cargo commands for deployment
[workspace.metadata.commands]
local = "spin up --listen 0.0.0.0:3000"
build-all = "cargo build --target wasm32-wasi --release --workspace --exclude shared"
build-services = "for service in booking-service notification-service reviews-service security-service validation-service info-on-arrival-service location-service rate-limiter-service auth-service; do echo Building $service...; cd $service && cargo build --target wasm32-wasi --release && cd ..; done"
deploy = "spin login && spin deploy"
deploy-local = "cargo build --target wasm32-wasi --release --workspace --exclude shared && spin build && spin up --listen 0.0.0.0:3000"
deploy-prod = "cargo build --target wasm32-wasi --release --workspace --exclude shared && spin build && spin login && spin deploy"