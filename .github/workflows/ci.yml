name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        
      - name: Install dependencies
        run: |
          cd frontend
          bun install || npm install
      
      - name: Lint
        run: |
          cd frontend
          npm run lint || bun run lint
      
      - name: Format check
        run: |
          cd frontend
          npm run fmt:check || bun run fmt:check
      
      - name: Test
        run: |
          cd frontend
          npm test || bun test || echo "No tests found"
      
      - name: Build
        run: |
          cd frontend
          npm run build || bun run build

  test-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        
      - name: Check formatting
        run: cargo fmt --all -- --check
        
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
        
      - name: Run tests
        run: cargo test --all-features

  clean-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup environment
        run: |
          chmod +x scripts/*.sh
          chmod +x database/scripts/*.sh
      
      - name: Clean all artifacts
        run: ./scripts/clean-all.sh all
      
      - name: Setup development environment
        run: ./scripts/dev-setup.sh
      
      - name: Verify clean build
        run: |
          cd frontend
          npm run build || bun run build
          cd ..
          cargo build --release