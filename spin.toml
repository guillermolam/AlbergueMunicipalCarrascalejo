
spin_manifest_version = 2

[application]
name = "albergue-microservices"
version = "0.1.0"
authors = ["Albergue Del Carrascalejo"]
description = "Microservices architecture for albergue management"

[variables]
database_url = { required = true, default = "postgresql://localhost:5432/albergue_dev" }
neon_database_url = { required = true }
auth0_domain = { required = true }
auth0_client_id = { required = true }
auth0_client_secret = { required = true }
smtp_host = { default = "smtp.resend.com" }
smtp_password = { required = false }
twilio_account_sid = { required = false }
twilio_auth_token = { required = false }
telegram_bot_token = { required = false }
google_places_api_key = { required = false }
log_level = { default = "info" }

# Gateway BFF Component
[[trigger.http]]
route = "/api/..."
component = "gateway-bff"

[component.gateway-bff]
source = "gateway/bff/target/wasm32-wasi/release/bff.wasm"
allowed_outbound_hosts = [
    "https://*.neon.tech",
    "https://api.auth0.com",
    "https://smtp.resend.com",
    "https://api.twilio.com",
    "https://api.telegram.org",
    "https://maps.googleapis.com"
]

[component.gateway-bff.build]
command = "cd gateway/bff && cargo build --target wasm32-wasi --release"

[component.gateway-bff.variables]
database_url = "{{ database_url }}"
auth0_domain = "{{ auth0_domain }}"
auth0_client_id = "{{ auth0_client_id }}"
auth0_client_secret = "{{ auth0_client_secret }}"
log_level = "{{ log_level }}"

[component.gateway-bff.key_value_stores]
default = "gateway-kv"

# Booking Service
[[trigger.http]]
route = "/booking/..."
component = "booking-service"

[component.booking-service]
source = "backend/booking-service/target/wasm32-wasi/release/booking_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.booking-service.build]
command = "cd backend/booking-service && cargo build --target wasm32-wasi --release"

[component.booking-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.booking-service.key_value_stores]
default = "booking-kv"

# Notification Service
[[trigger.http]]
route = "/notification/..."
component = "notification-service"

[component.notification-service]
source = "backend/notification-service/target/wasm32-wasi/release/notification_service.wasm"
allowed_outbound_hosts = [
    "https://*.neon.tech",
    "https://smtp.resend.com",
    "https://api.twilio.com",
    "https://api.telegram.org"
]

[component.notification-service.build]
command = "cd backend/notification-service && cargo build --target wasm32-wasi --release"

[component.notification-service.variables]
database_url = "{{ database_url }}"
smtp_host = "{{ smtp_host }}"
smtp_password = "{{ smtp_password }}"
twilio_account_sid = "{{ twilio_account_sid }}"
twilio_auth_token = "{{ twilio_auth_token }}"
telegram_bot_token = "{{ telegram_bot_token }}"
log_level = "{{ log_level }}"

[component.notification-service.key_value_stores]
default = "notification-kv"

# Reviews Service
[[trigger.http]]
route = "/reviews/..."
component = "reviews-service"

[component.reviews-service]
source = "backend/reviews-service/target/wasm32-wasi/release/reviews_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.reviews-service.build]
command = "cd backend/reviews-service && cargo build --target wasm32-wasi --release"

[component.reviews-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.reviews-service.key_value_stores]
default = "reviews-kv"

# Security Service
[[trigger.http]]
route = "/security/..."
component = "security-service"

[component.security-service]
source = "backend/security-service/target/wasm32-wasi/release/security_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.security-service.build]
command = "cd backend/security-service && cargo build --target wasm32-wasi --release"

[component.security-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.security-service.key_value_stores]
default = "security-kv"

# Validation Service
[[trigger.http]]
route = "/validation/..."
component = "validation-service"

[component.validation-service]
source = "backend/validation-service/target/wasm32-wasi/release/validation_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.validation-service.build]
command = "cd backend/validation-service && cargo build --target wasm32-wasi --release"

[component.validation-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.validation-service.key_value_stores]
default = "validation-kv"

# Info on Arrival Service
[[trigger.http]]
route = "/info/..."
component = "info-on-arrival-service"

[component.info-on-arrival-service]
source = "backend/info-on-arrival-service/target/wasm32-wasi/release/info_on_arrival_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.info-on-arrival-service.build]
command = "cd backend/info-on-arrival-service && cargo build --target wasm32-wasi --release"

[component.info-on-arrival-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.info-on-arrival-service.key_value_stores]
default = "info-kv"

# Location Service
[[trigger.http]]
route = "/location/..."
component = "location-service"

[component.location-service]
source = "backend/location-service/target/wasm32-wasi/release/location_service.wasm"
allowed_outbound_hosts = [
    "https://*.neon.tech",
    "https://maps.googleapis.com"
]

[component.location-service.build]
command = "cd backend/location-service && cargo build --target wasm32-wasi --release"

[component.location-service.variables]
database_url = "{{ database_url }}"
google_places_api_key = "{{ google_places_api_key }}"
log_level = "{{ log_level }}"

[component.location-service.key_value_stores]
default = "location-kv"

# Rate Limiter Service
[[trigger.http]]
route = "/rate-limiter/..."
component = "rate-limiter-service"

[component.rate-limiter-service]
source = "backend/rate-limiter-service/target/wasm32-wasi/release/rate_limiter_service.wasm"
allowed_outbound_hosts = ["https://*.neon.tech"]

[component.rate-limiter-service.build]
command = "cd backend/rate-limiter-service && cargo build --target wasm32-wasi --release"

[component.rate-limiter-service.variables]
database_url = "{{ database_url }}"
log_level = "{{ log_level }}"

[component.rate-limiter-service.key_value_stores]
default = "rate-limiter-kv"

# Auth Service
[[trigger.http]]
route = "/auth/..."
component = "auth-service"

[component.auth-service]
source = "backend/auth-service/target/wasm32-wasi/release/auth_service.wasm"
allowed_outbound_hosts = [
    "https://*.neon.tech",
    "https://api.auth0.com"
]

[component.auth-service.build]
command = "cd backend/auth-service && cargo build --target wasm32-wasi --release"

[component.auth-service.variables]
database_url = "{{ database_url }}"
auth0_domain = "{{ auth0_domain }}"
auth0_client_id = "{{ auth0_client_id }}"
auth0_client_secret = "{{ auth0_client_secret }}"
log_level = "{{ log_level }}"

[component.auth-service.key_value_stores]
default = "auth-kv"
