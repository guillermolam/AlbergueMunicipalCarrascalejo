# .github/dependabot.yml
# Dependabot configuration for AlbergueMunicipalCarrascalejo
# Multi-ecosystem project with Rust microservices, React frontends, and Docker

version: 2
updates:
  # ========================
  # ü¶Ä RUST CARGO ECOSYSTEM
  # ========================
  
  # Main Cargo workspace (backend services)
  - package-ecosystem: "cargo"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "09:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 5
    reviewers:
      - "guillermolam"
    assignees:
      - "guillermolam"
    commit-message:
      prefix: "cargo"
      prefix-development: "cargo(dev)"
      include: "scope"
    labels:
      - "dependencies"
      - "rust"
      - "backend"
    groups:
      rust-security:
        patterns:
          - "security-*"
          - "rustls*"
          - "openssl*"
        update-types:
          - "patch"
          - "minor"
      rust-spin:
        patterns:
          - "spin-*"
          - "fermyon-*"
          - "wasmtime*"
          - "wit-*"
        update-types:
          - "patch"
          - "minor"
      rust-web:
        patterns:
          - "serde*"
          - "tokio*"
          - "hyper*"
          - "reqwest*"
          - "axum*"
        update-types:
          - "patch"
          - "minor"
    ignore:
      # Ignore major version updates for critical dependencies
      - dependency-name: "spin-sdk"
        update-types: ["version-update:semver-major"]
      - dependency-name: "wasmtime"
        update-types: ["version-update:semver-major"]

  # Individual service dependencies (if they have separate Cargo.toml)
  - package-ecosystem: "cargo"
    directory: "/gateway"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "10:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 3
    commit-message:
      prefix: "gateway"
    labels:
      - "dependencies"
      - "rust"
      - "gateway"

  # ========================
  # üì¶ BUN/NODE.JS ECOSYSTEM
  # ========================
  
  # Main frontend (React)
  - package-ecosystem: "npm"
    directory: "/frontend"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "09:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 5
    reviewers:
      - "guillermolam"
    assignees:
      - "guillermolam"
    commit-message:
      prefix: "frontend"
      prefix-development: "frontend(dev)"
      include: "scope"
    labels:
      - "dependencies"
      - "frontend"
      - "react"
    groups:
      react-core:
        patterns:
          - "react*"
          - "@types/react*"
        update-types:
          - "patch"
          - "minor"
      build-tools:
        patterns:
          - "vite*"
          - "@vitejs/*"
          - "typescript*"
          - "eslint*"
          - "prettier*"
        update-types:
          - "patch"
          - "minor"
      ui-components:
        patterns:
          - "@mui/*"
          - "styled-components*"
          - "@emotion/*"
        update-types:
          - "patch"
          - "minor"
    ignore:
      # Avoid breaking changes in React
      - dependency-name: "react"
        update-types: ["version-update:semver-major"]
      - dependency-name: "react-dom"
        update-types: ["version-update:semver-major"]

  # Auth service frontend (separate React app)
  - package-ecosystem: "npm"
    directory: "/backend/auth-service/app"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "10:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 3
    commit-message:
      prefix: "auth-frontend"
    labels:
      - "dependencies"
      - "frontend"
      - "auth"
    groups:
      auth-frontend-core:
        patterns:
          - "react*"
          - "@types/react*"
          - "vite*"
        update-types:
          - "patch"
          - "minor"

  # ========================
  # üê≥ DOCKER ECOSYSTEM
  # ========================
  
  # Root Docker files
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "wednesday"
      time: "09:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 3
    reviewers:
      - "guillermolam"
    commit-message:
      prefix: "docker"
      include: "scope"
    labels:
      - "dependencies"
      - "docker"
      - "infrastructure"
    groups:
      base-images:
        patterns:
          - "rust*"
          - "node*"
          - "alpine*"
          - "ubuntu*"
        update-types:
          - "patch"
          - "minor"

  # Development Docker files
  - package-ecosystem: "docker"
    directory: "/docker"
    schedule:
      interval: "weekly"
      day: "wednesday"
      time: "10:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 2
    commit-message:
      prefix: "docker(dev)"
    labels:
      - "dependencies"
      - "docker"
      - "development"

  # ========================
  # üìã GITHUB ACTIONS
  # ========================
  
  # GitHub Actions workflows
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "thursday"
      time: "09:00"
      timezone: "Europe/Madrid"
    open-pull-requests-limit: 3
    reviewers:
      - "guillermolam"
    commit-message:
      prefix: "ci"
      include: "scope"
    labels:
      - "dependencies"
      - "github-actions"
      - "ci/cd"
    groups:
      ci-actions:
        patterns:
          - "actions/*"
          - "docker/*"
        update-types:
          - "patch"
          - "minor"
          - "major"

# ========================
# üîê PRIVATE REGISTRIES
# ========================
registries:
  # Add if you use private Rust registries
  # my-private-registry:
  #   type: cargo-registry
  #   url: https://my-registry.example.com
  #   token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
