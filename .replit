# .replit (Versión Optimizada)

# Solo PostgreSQL como módulo. Bun viene de replit.nix ahora.
modules = ["postgresql-16"]

# Comando principal para desarrollo
run = "task"

# Punto de entrada del proyecto
entrypoint = "spin.toml"

# Archivos y carpetas ocultos en el explorador
hidden = [".config", "bun.lockb", "target", "node_modules", ".cache", ".trunk"]

# Configuración de Nix (sin channel específico)
[nix]

[languages.python]
pattern = "**/*.py"

# Language server para Rust
[languages.rust]
pattern = "**/*.rs"
[languages.rust.languageServer]
start = "rust-analyzer"

# Configuración de workflows
[workflows]
runButton = "Run"

# Workflow principal: desarrollo local
[[workflows.workflow]]
name = "Run"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task setup:check"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task build:all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task local"

# Workflow de construcción completa
[[workflows.workflow]]
name = "Build All"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task build:all"

# Workflow de testing completo
[[workflows.workflow]]
name = "Test All"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task test:all"

# Workflow de calidad de código
[[workflows.workflow]]
name = "Quality Check"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "trunk check --all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "trunk fmt --all"

# Workflow de despliegue a producción
[[workflows.workflow]]
name = "Deploy Production"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
name= "Build everything"
task = "shell.exec"
args = "task build:all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "task prod"

# Workflow de despliegue a producción
[[workflows.workflow]]
name = "deploy:production"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export NODE_ENV=production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && bun run build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd gateway && cargo build --target wasm32-wasi --release"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && cargo build --target wasm32-wasi --release --workspace --exclude shared"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sqlx migrate run --database-url $NEON_DATABASE_URL"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "spin build"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "spin login"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "spin deploy"

[[workflows.workflow]]
name = "migrate:dev"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export NODE_ENV=development"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sqlx migrate run --database-url $DATABASE_URL"

[[workflows.workflow]]
name = "migrate:prod"
author = 41744552
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export NODE_ENV=production"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "sqlx migrate run --database-url $NEON_DATABASE_URL"
